<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
<meta name="language" content="ru"/>
<meta name="viewport" content="width=device-width"/>
<meta name="description" content="Программирование C++"/>
<link rel="stylesheet" type="text/css" href="/styles.css"/>
<title>Программирование на С++</title>
</head>
<body>
<h1>Программирование на С++</h1>


<h2>Теоретические сведения</h2>
<!-- ЛИППМАН - C++ ДЛЯ НАЧИНАЮЩИХ -->

<ol>

<li class="link"> <a href="book/introduction.html">Начинаем</a>: Решение задачи.
      Программа на языке C++. Директивы препроцессора. Немного о комментариях.
      Первый взгляд на ввод/вывод.
</li>

<li class="link"> <a href="book/introduction_next.html">Краткий обзор С++</a>:  Встроенный тип
      данных "массив". Динамическое выделение памяти и указатели. Объектный подход.
      Объектно-ориентированный подход.
</li>

<li class="link"> <a href="book/datatypes.html">Типы данных С++</a>:  Литералы. Переменные.
      Указатели. Строковые типы. Спецификатор const. Ссылочный тип. Тип bool.
      Перечисления. Тип "массив". Класс vector. Класс complex.
</li>

<li class="link"> <a href="book/expressions.html">Выражения</a>:  Что такое выражение?
      Арифметические операции. Операции сравнения и логические операции. Операции
      присваивания. Операции инкремента и декремента.
</li>

<li class="link"> <a href="book/instructions.html">Инструкции</a>:  Простые и составные
      инструкции. Инструкции объявления. Инструкция if. Инструкция switch. Инструкция
      цикла for. Инструкция while.
</li>

<li class="link"> <a href="book/abstract_containers.html">Абстрактные контейнерные типы</a>:
      Система текстового поиска. Вектор или список? Как растет вектор? Как определить
      последовательный контейнер? Итераторы.
      <!--
      Выделяем слова в строке. Обрабатываем знаки препинания.
      Приводим слова к стандартной форме. Дополнительные операции со строками.
      Строим отображение позиций слов. Построение набора стоп-слов. Окончательная
      программа. Контейнеры multimap и multiset. Стек. Очередь и очередь с приоритетами.
      Вернемся в классу iStack.
      -->
</li>

<li class="link"> <a href="book/functions.html">Функции</a>:  Введение. Прототип функции.
      Передача аргументов. Возврат значения. Рекурсия. Встроенные функции. Директива
      связывания extern "C". Функция main():
</li>

<li class="link"> <a href="book/visibility_scope.html">Область видимости и время жизни</a>:
      Область видимости. Глобальные объекты и функции. Локальные объекты. Динамически
      размещаемые объекты.
</li>

<li class="link"> <a href="book/namespaces.html">Пространства имен</a></li>

<li class="link"> <a href="book/function_overloading.html">Перегруженные функции</a>:  Объявления
      перегруженных функций. Три шага разрешения перегрузки. Преобразования типов
      аргументов.
</li>

<li class="link"> <a href="book/function_templates.html">Шаблоны функций</a>:  Определение шаблона
      функции. Конкретизация шаблона функции. Вывод аргументов шаблона. Явное
      задание аргументов шаблона.
      <!--
      Разрешение перегрузки при конкретизации.
      Разрешение имен в определениях шаблонов. Пространства имен и шаблоны функций.
      Пример шаблона функции.
      -->
</li>

<li class="link"> <a href="book/exceptions.html">Обработка исключений</a>:
Возбуждение исключений. Try-блок. Перехват исключений. Спецификации исключений.
 Исключения и вопросы проектирования.
</li>

<li class="link"> <a href="book/algorithm_templates.html">Обобщенные алгоритмы</a>:
Краткий обзор. Использование обобщенных алгоритмов. Объекты-функции. Еще раз об итераторах. Обобщенные алгоритмы.
</li>

<li class="link"> <a href="book/classes.html">Классы</a>:
Определение класса. Объекты классов. Функции-члены класса. Неявный
указатель this. Статические члены класса. Указатель на член класса.
</li>

<li class="link"> <a href="book/class_lifetime.html">Инициализация, присваивание и уничтожение класса</a>:
 Инициализация класса. Конструктор класса. Деструктор класса. Массивы и векторы объектов.
</li>

<li class="link"> <a href="book/operator_overloading.html">Перегруженные операторы</a>:
     Перегрузка операторов. Друзья. Оператор =.Оператор взятия индекса.
</li>

<li class="link"> <a href="book/operator_conversions.html">Определенные пользователем преобразования</a>.
</li>

<li class="link"> <a href="book/class_templates.html">Шаблоны классов</a>: Определение шаблона класса. Конкретизация шаблона класса. Функции-члены шаблонов классов. Объявления друзей в шаблонах классов.
</li>

<li class="link"> <a href="book/class_subtypes.html">Наследование и подтипизация классов</a>:
Определение иерархии классов. Идентификация членов иерархии. Доступ к членам базового класса.
</li>

<li class="link"> <a href="book/class_multiple_inheritance.html">Множественное и виртуальное наследование</a>: Готовим сцену
 Множественное наследование.
Открытое, закрытое и защищенное наследование.
</li>

<li class="link"> <a href="book/class_inheritance.html">Применение наследования в C++</a>:
      Идентификация типов во время выполнения.
      Исключения и наследование.
      Разрешение перегрузки и наследование A.
</li>

<li class="link"> <a href="book/iostream.html">Библиотека iostream</a>: Оператор вывода &lt;&lt;.
 Ввод. Дополнительные операторы ввода/вывода. Перегрузка оператора вывода. Перегрузка оператора ввода.
</li>

<li class="link"> <a href="book/algorithm_templates_next.html">Обобщенные алгоритмы в алфавитном порядке</a>:
Алгоритм adjacent_difference() Алгоритм adjacent_find() Алгоритм binary_search()
</li>

</ol>

<h2>Лабораторные работы</h2>

<ol>
<li class="link"><a href="labs/lab1_class.html">Классы</a></li>
<li class="link"><a href="labs/lab2_virtfunc.html">Наследование и виртуальные функции</a></li>
<li class="link"><a href="labs/lab3_overload.html">Перегрузка функций и операторов</a></li>
<li class="link"><a href="labs/lab4_new_exception.html">Динамическое выделение памяти, исключения</a></li>
<li class="link"><a href="labs/lab5_textfile.html">Работа с файловыми потоками в С++. Текстовые файлы.</a></li>
<li class="link"><a href="labs/lab6_binfile.html">Работа с файловыми потоками в С++. Двоичные файлы.</a></li>
<li class="link"><a href="labs/lab7_template.html">Шаблоны</a></li>
<li class="link"><a href="labs/lab8_stl.html">Стандартная библиотека шаблонов STL</a></li>
</ol>

<h3>Порядок выполнения лабораторных работ</h3>
<ol>
<li>На лабораторной работе набрать текст программы и отладить ее.</li>
<li>Показать результат работы программы преподавателю на компьютере.</li>
<li>Защитить лабораторную работу, ответив на вопросы преподавателя.</li>
</ol>
<h3>Отчет о выполнении лабораторной работы</h3>
<ol>
<li>самый краткий конспект теоретической части;</li>
<li>задание лабораторной работы;</li>
<li>исходный код всех файлов вашего проекта;</li>
<li>результаты выполнения программ.</li>
</ol>

<h2>Индивидуальные задания</h2>
<ul>
<li class="link"><a href="individ.html">Индивидуальные задания</a></li>
</ul>

<h2>Контроль</h2>
<ul>
<li class="link"><a href="quest_1.html">Вопросы и задания первого модульного контроля</a></li>
<li class="link"><a href="quest_2.html">Вопросы и задания второго модульного контроля</a></li>
<li class="link"><a href="mod1.doc">Билеты первого модульного контроля</a></li>
<li class="link"><a href="mod2.doc">Билеты второго модульного контроля</a></li>
<li class="link"><a href="quest_final.html">Вопросы и задания итогового контроля</a></li>
</ul>


<h2>Дополнительное чтение</h2>
<ul>
<li class="link"><a href="https://www.bell-labs.com/usr/dmr/www/chist.html">История возникновения С: статья Dennis M. Ritchie.</a></li>
<li class="link"><a href="https://dl.acm.org/doi/pdf/10.1145/234286.1057834">История возникновения С: 2.</a></li>
</ul>

</body>
</html>
